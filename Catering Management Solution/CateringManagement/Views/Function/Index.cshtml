@model IEnumerable<CateringManagement.Models.Function>

<partial name="_ViewHeading" />

<form asp-action="Index" method="get">
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
    <div class="form-horizontal">
        <button class="btn @ViewData["Filtering"]" type="button" data-bs-toggle="collapse" id="filterToggle" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
            Filter/Search @ViewData["numberFilters"]
        </button><br />
        <div class="collapse @ViewData["ShowFilter"]" id="collapseFilter">
            <div class="card card-body bg-light">
                <div class="row">
                    <div class="form-group col-md-4">
                        <label class="control-label">Filter by Customer:</label>
                        @Html.DropDownList("CustomerID", null, "All Customers", htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label">Filter by Function Type:</label>
                        @Html.DropDownList("FunctionTypeID", null, "All Types", htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label">Search Function Name/Lobby Sign:</label>
                        @Html.TextBox("SearchString", null, new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-4 align-self-end">
                        <input type="submit" name="actionButton" value="Filter" class="btn btn-outline-primary" />
                        <a asp-action="Index" class="btn btn-outline-dark">Clear</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    <input type="submit" name="actionButton" value="Function" class="btn btn-link" />
                </th>
                <th class="d-none d-sm-table-cell">
                    <input type="submit" value="Type" class="btn btn-toolbar" />
                </th>
                <th class="d-none d-md-table-cell">
                    <input type="submit" name="actionButton" value="Guar. No." class="btn btn-link" />
                </th>
                <th class="d-none d-xxl-table-cell">
                    <input type="submit" value="Rooms Booked" class="btn btn-toolbar" />
                </th>
                <th class="d-none d-lg-table-cell">
                    <input type="submit" name="actionButton" value="Customer" class="btn btn-link" />
                </th>
                <th style="min-width:120px">
                    <a asp-action="Create" class="btn btn-sm btn-outline-success"
                       role="button" data-bs-toggle="tooltip" title="Create New @ViewData["ControllerFriendlyName"]">
                        <strong>&#x270D; Create New</strong>
                    </a>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDateSummary) (@Html.DisplayFor(modelItem => item.DurationSummary))<br />
                        @Html.DisplayFor(modelItem => item.Summary)
                    </td>
                    <td class="d-none d-sm-table-cell">
                        @Html.DisplayFor(modelItem => item.FunctionType.Name) <br />
                        Est. Value: @Html.DisplayFor(modelItem => item.EstimatedValue)
                    </td>
                    <td class="d-none d-md-table-cell">
                        @Html.DisplayFor(modelItem => item.GuaranteedNumber) <br />
                        @{
                            int fileCount = item.FunctionDocuments.Count;
                            if (fileCount > 0)
                            {
                                var firstFile = item.FunctionDocuments.FirstOrDefault(); ;
                                if (fileCount > 1)
                                {
                                    <a class="" role="button" data-bs-toggle="collapse" href="#collapseDocs@(item.ID)" aria-expanded="false" aria-controls="collapseDocs@(item.ID)">
                                        <span class="badge bg-info">@fileCount</span> Documents...
                                    </a>
                                    <div class="collapse" id="collapseDocs@(item.ID)">
                                        @{
                                            foreach (var d in item.FunctionDocuments)
                                            {
                                                <a asp-controller="FunctionDocument" asp-action="Download" asp-route-id="@d.ID">@d.FileName</a> <br />
                                            }
                                        }
                                    </div>
                                }
                                else
                                {
                                    <a asp-controller="FunctionDocument" asp-action="Download" asp-route-id="@firstFile.ID">@firstFile.FileName</a>
                                }
                            }
                        }
                    </td>
                    <td class="d-none d-xxl-table-cell">
                        @{
                            int roomCount = item.FunctionRooms.Count;
                            if (roomCount > 0)
                            {
                                string firstRoom = item.FunctionRooms.FirstOrDefault().Room.Summary;
                                if (roomCount > 1)
                                {
                                    string roomList = "";
                                    var c = item.FunctionRooms.ToList();
                                    for (int i = 1; i < roomCount; i++)//Skip the first because we have it already
                                    {
                                        roomList += c[i].Room.Summary + " <br />";
                                    }
                                    <a class="" role="button" data-bs-toggle="collapse" href="#collapseRoom@(item.ID)"
                                       aria-expanded="false" aria-controls="collapseRoom@(item.ID)">
                                        @firstRoom <span class="badge bg-info">@roomCount</span>
                                    </a>
                                    <div class="collapse" id="collapseRoom@(item.ID)">
                                        @Html.Raw(roomList)
                                    </div>
                                }
                                else
                                {
                                    @firstRoom
                                }
                            }
                        }
                    </td>
                    <td class="d-none d-lg-table-cell">
                        @Html.DisplayFor(modelItem => item.Customer.FullName) <br />
                        @Html.DisplayFor(modelItem => item.Customer.CustomerCode)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-sm btn-outline-primary"
                           role="button" data-bs-toggle="tooltip" title="Edit @ViewData["ControllerFriendlyName"]">
                            &#x270E;
                        </a>
                        <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-sm btn-outline-primary"
                           role="button" data-bs-toggle="tooltip" title="@ViewData["ControllerFriendlyName"] Details">
                            &#x1F50E;
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-sm btn-outline-primary"
                           role="button" data-bs-toggle="tooltip" title="Delete @ViewData["ControllerFriendlyName"]">
                            &#x274C;
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <partial name="_PagingNavBar" />
</form>
@section Scripts {
    <script type="text/javascript">
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>
}

