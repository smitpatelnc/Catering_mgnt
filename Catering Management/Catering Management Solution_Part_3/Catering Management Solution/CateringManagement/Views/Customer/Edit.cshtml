@model CateringManagement.Models.Customer

<partial name="_ViewHeading" />

<hr />
@{
    var hasPicture = (Model.CustomerPhoto?.Content != null);
    if (hasPicture)
        {
            @:<div>
                string imageBase64 = Convert.ToBase64String(Model.CustomerPhoto.Content);
                string imageSrc = string.Format("data:" + Model.CustomerPhoto.MimeType + ";base64,{0}", imageBase64);
                <img src="@imageSrc" alt="Profile Picture of @Model.FullName" title="Profile Picture of @Model.FullName" class="img-fluid rounded" />
            @:</div><hr />
        }
    }
<form asp-action="Edit" method="post" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="ID" />
    <div>
        @{
            if (hasPicture)
            {
                <div class="row">
                    <div class="form-check m-3">
                        <input class="form-check-input" type="checkbox" id="chkRemoveImage" name="chkRemoveImage">
                        <label class="form-check-label" for="chkRemoveImage">
                        <strong>Check to remove Image</strong>
                        </label>
                    </div>
                </div>
            }
        }
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                    <label class="control-label custom-file-label">Picture File:</label>
                    <div class="input-group mb-3">
                      <input type="file" class="form-control" name="thePicture" id="thePicture">
                    </div>
                </div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MiddleName" class="control-label"></label>
                <input asp-for="MiddleName" class="form-control" />
                <span asp-validation-for="MiddleName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CompanyName" class="control-label"></label>
                <input asp-for="CompanyName" class="form-control" />
                <span asp-validation-for="CompanyName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
             <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CustomerCode" class="control-label"></label>
                <input asp-for="CustomerCode" class="form-control" />
                <span asp-validation-for="CustomerCode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>

<div>
    <partial name="_BackToList" />
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
